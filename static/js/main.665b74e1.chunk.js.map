{"version":3,"sources":["config/constants/tokens.ts","config/constants/types.ts","utils/makeBatchRequest.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","views/Pools/helpers.tsx","hooks/useRefresh.ts","config/constants/endpoints.ts","components/UnlockButton.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","config/constants/campaigns.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/web3React.ts","utils/wallet.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/farmsPriceHelpers.ts","state/apiPrices/index.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","utils/bigNumber.ts","components/Tags.tsx","utils/achievements.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","utils/getTimePeriods.ts","components/PageLoader.tsx","hooks/usePersistState.ts","hooks/useApprove.ts","utils/formatBalance.ts","hooks/useUnstake.ts","hooks/useHarvest.ts","hooks/usePreviousValue.ts","routerHistory.ts","state/pools/helpers.ts","state/hooks.ts","utils/contractHelpers.ts","config/index.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","utils/apr.ts","components/ApyCalculatorModal/index.tsx","components/PageHeader/PageHeader.tsx","hooks/useContract.ts","state/index.ts","hooks/useWeb3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/multicall.ts","hooks/useToast.ts","utils/web3.ts","config/constants/pools.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useTheme.ts","utils/compoundApyHelpers.ts","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Balance.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","config/constants/nfts.ts","config/constants/farms.ts"],"names":["tokens","bnb","symbol","projectLink","cake","address","56","97","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","PoolIds","PoolCategory","NftType","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","call","Promise","resolve","reject","add","request","err","result","execute","all","priceHelperLps","pid","lpSymbol","lpAddresses","token","quoteToken","fetchFarm","a","lpAddress","getAddress","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","farm","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","convertCakeToShares","amountInShares","dividedBy","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","GRAPH_API_PREDICTION_WITH_TOKEN","UnlockButton","props","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","useToast","useCallback","connectorID","connector","connectorsByName","error","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","nodes","getNodeUrl","randomIndex","random","length","teams","id","description","images","lg","md","sm","alt","ipfs","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","campaigns","type","title","badge","campaignMap","Map","campaign","set","DEFAULT_META","image","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","gt","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","getIdentifierKeyFromAddress","nftAddress","nftSource","Object","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","console","getNftByTokenId","Nfts","nft","identifier","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getPredictionsWithTokenAddress","getChainlinkOracleAddress","useSousStake","sousId","isUsingBnb","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","keys","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","pending","association","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","ethereum","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenAddress","tokenImage","options","tokenAdded","LS_KEY","fetchLocale","locale","response","getLanguageCodeFromLS","getItem","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","useState","codeFromStorage","languages","setState","useEffect","enLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","preferredFarm","some","fetchApiPrices","updated_at","parseFloat","price","apiPricesSlice","lastUpdated","React","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","BIG_NINE","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","log","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","useLastUpdated","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","Wrapper","PageLoader","usePersistState","initialValue","localStorageKey","valueFromLS","setValue","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","ethers","constants","MaxUint256","send","from","getBalanceAmount","balance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","getTokenBalanceAmount","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","ref","useRef","current","createBrowserHistory","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","usePollFarmsData","includeArchive","web3","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useBusdPriceFromToken","tokenFarm","useFarmFromTokenSymbol","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","block","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","getContract","abi","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getPredictionsWithTokenContract","getChainlinkOracleContract","chainlinkOracleAbi","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS","FlexLayout","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmApr","poolLiquidityUsd","Grid","GridItem","ApyCalculatorModal","onDismiss","tokenPrice","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","num","getRoi","amountEarned","amountInvested","maxWidth","freq","mt","fee","justifyContent","href","Outer","Box","colors","gradients","bubblegum","Inner","PageHeader","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","usePredictionsWithTokenContract","useChainlinkOracleContract","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","apiPrices","apiPricesReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","endBlock","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","res","pendingRewards","pendingCake","cakeVaultContract","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","setPoolsPublicData","getState","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","toastContext","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","earningToken","CORE","sortOrder","COMMUNITY","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","useTheme","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","label","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Balance","isDisabled","unit","prefix","previousValue","showPrefix","showUnit","start","end","duration","separator","AprRow","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","earningTokenPrice","earningTokenPriceAsNumber","stakingTokenPriceAsNumber","isHighValueToken","apyModalLink","useModal","onPresentApyModal","alignItems","height","earningsPercentageToDisplay","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","css","primaryBright","secondary","card","isDesktop","StyledCardInner","isPromotedPool","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","flexDirection","small","manualCakeTotalMinusAutoVault","minus","getTotalStakedBalance","ml","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","toLocaleLowerCase","isCakePool","src","ApprovalAction","stakingTokenContract","requestedApproval","setRequestedApproval","handleApprove","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","mx","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","style","textAlign","minWidth","onUserInput","input","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","gte","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","isVaultApproved","setIsVaultApproved","currentAllowance","checkApprovalStatus","VaultApprovalAction","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","shouldDisplayCakeProfit","cakeProfit","dollarValueOfCake","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ButtonText","UiKitLink","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","useRouteMatch","url","isExact","to","checked","onChange","px","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","BountyCard","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","Pools","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","cakePoolData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","exact","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsWithToken","App","Global","component","iterations","Providers","ReactDOM","render","StrictMode","document","getElementById","transformProfileResponse","profileResponse","userId","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","isCommunity"],"mappings":"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","file":"static/js/main.665b74e1.chunk.js","sourcesContent":["const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0xaabcac4b236d1a7290fb05234862348d274621cf',\n      97: '0xaabcac4b236d1a7290fb05234862348d274621cf',\n    },\n    decimals: 9,\n    projectLink: 'https://icebreak-r.com/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n}\n\nexport default tokens\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport { Address, Token } from 'config/constants/types'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\n\nconst fetchFarm = async (pid: number, lpAddresses: Address, token: Token, quoteToken: Token) => {\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const farmPublicData = await fetchPublicFarmData(pid, lpAddresses, token, quoteToken)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return new BigNumber(1)\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_PREDICTION_WITH_TOKEN = process.env.REACT_APP_GRAPH_API_PREDICTION_WITH_TOKEN\n\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError(t('Provider Error'), t('No provider was found'))\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError(t('Authorization Error'), t('Please authorize to access your account'))\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(t('Unable to find connector'), t('The connector config is wrong'))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalmar.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'ICEBRK-R',\n  description:\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by ICEBRK-R), NFTs, and more, on a platform you can trust.',\n  image: '/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('ICEBRK-R')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('ICEBRK-R')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('ICEBRK-R')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('ICEBRK-R')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('ICEBRK-R')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('ICEBRK-R')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('ICEBRK-R')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('ICEBRK-R')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('ICEBRK-R')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('ICEBRK-R')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('ICEBRK-R')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd().times(1e9)\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x07C1520d6DfF1d40c473754Dc190753694F638c0',\n    97: '0x89dde524604c21794AD2040FefF63DF977eeC999',\n  },\n  predictionsWithToken: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x89dde524604c21794AD2040FefF63DF977eeC999',\n  },\n  chainlinkOracle: {\n    /* 56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE', */\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '0xd21182535598e18d530e88c08c3ffb630b88f84a',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getPredictionsWithTokenAddress = () => {\n  return getAddress(addresses.predictionsWithToken)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceApiState } from 'state/types'\n\nconst initialState: PriceApiState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchApiPrices = createAsyncThunk<PriceApiThunk>('apiPrices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const apiPricesSlice = createSlice({\n  name: 'apiPrices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchApiPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchApiPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default apiPricesSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon } from '@pancakeswap/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst ManualPoolTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Manual\n  </Tag>\n)\n\nconst CompoundingPoolTag = (props) => (\n  <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n    Auto\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      console.log(state.currentEpoch)\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\n export const getTokenDecimalAmount = (amount: BigNumber, decimals = 9) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getTokenBalanceAmount = (amount: BigNumber, decimals = 9) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getTokenBalanceNumber = (balance: BigNumber, decimals = 9) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getTokenFullDisplayBalance = (balance: BigNumber, decimals = 9, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceApiState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchApiPrices } from './apiPrices'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools.map(transformPool)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// API Prices\nexport const useFetchApiPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchApiPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const apiPrices: PriceApiState['data'] = useSelector((state: State) => state.apiPrices.data)\n  return apiPrices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const apiPrices = useGetApiPrices()\n\n  if (!apiPrices) {\n    return null\n  }\n\n  return apiPrices[address.toLowerCase()]\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getPredictionsWithTokenAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getPredictionsWithTokenContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsWithTokenAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS = 200000\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getPredictionsWithTokenContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const usePredictionsWithTokenContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsWithTokenContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport apiPricesReducer from './apiPrices'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    apiPrices: apiPricesReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser } from 'state/types'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: number, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: number, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: number, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: number, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 159,\n    stakingToken: tokens.cake,\n    earningToken: tokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: tokens.cake,\n    earningToken: tokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: tokens.cake,\n    earningToken: tokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: tokens.cake,\n    earningToken: tokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: tokens.cake,\n    earningToken: tokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: tokens.cake,\n    earningToken: tokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: tokens.doge,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: tokens.cake,\n    earningToken: tokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: tokens.cake,\n    earningToken: tokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: tokens.cake,\n    earningToken: tokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: tokens.cake,\n    earningToken: tokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: tokens.cake,\n    earningToken: tokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: tokens.cake,\n    earningToken: tokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: tokens.cake,\n    earningToken: tokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: tokens.cake,\n    earningToken: tokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: tokens.cake,\n    earningToken: tokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: tokens.cake,\n    earningToken: tokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: tokens.cake,\n    earningToken: tokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: tokens.tpt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: tokens.cake,\n    earningToken: tokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: tokens.cake,\n    earningToken: tokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: tokens.sushi,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: tokens.cake,\n    earningToken: tokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: tokens.cake,\n    earningToken: tokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: tokens.cake,\n    earningToken: tokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: tokens.cake,\n    earningToken: tokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: tokens.cake,\n    earningToken: tokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: tokens.cake,\n    earningToken: tokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: tokens.cake,\n    earningToken: tokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: tokens.cake,\n    earningToken: tokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: tokens.cake,\n    earningToken: tokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: tokens.twt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: tokens.cake,\n    earningToken: tokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: tokens.cake,\n    earningToken: tokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: tokens.bnb,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: tokens.cake,\n    earningToken: tokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.cake,\n    earningToken: tokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.cake,\n    earningToken: tokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// API Price State\nexport interface PriceApiList {\n  /* eslint-disable camelcase */\n  [key: string]: {\n    name: string\n    symbol: string\n    price: string\n    price_BNB: string\n  }\n}\n\nexport interface PriceApiListThunk {\n  /* eslint-disable camelcase */\n  [key: string]: number\n}\n\nexport interface PriceApiResponse {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiList\n}\n\nexport interface PriceApiThunk {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiListThunk\n}\n\nexport interface PriceApiState {\n  isLoading: boolean\n  lastUpdated: string\n  data: PriceApiListThunk\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  apiPrices: PriceApiState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n  console.log(currentEpoch)\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pt-BR': PTBR,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-image: ${({ theme }) => (theme.isDark ? 'url(/images/dark-bg.jpg)' : 'url(/images/light-bg.jpg)' )};\n    background-repeat: no-repeat fixed;\n    background-image: fit;\n    background-size: cover;\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { getCakeAddress } from 'utils/addressHelpers'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Swap'),\n    icon: 'TradeIcon',\n    href: 'https://swap.icebreak-r.com/#/swap?inputCurrency=BNB&outputCurrency=0xaabcac4b236d1a7290fb05234862348d274621cf',\n  },\n  {\n    label: t('Liquidity'),\n    icon: 'TradeIcon',\n    href: 'https://swap.icebreak-r.com/#/add/BNB/0xaabcac4b236d1a7290fb05234862348d274621cf',\n  },\n  {\n    label: t(\"(Wagering BNB) Prediction\"),\n    icon: 'PredictionsIcon',\n    href: '/prediction',\n  },\n  {\n    label: t(\"(Wagering Icebrk) Prediction\"),\n    icon: 'PredictionsIcon',\n    href: '/prediction_with_token',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'IceBreak-R Chart on DexTools',\n        href: 'https://www.dextools.io/app/pancakeswap/pair-explorer/'.concat(getCakeAddress()),\n      },\n      {\n        label: 'IceBreak-R on PancakeSwap',\n        href: 'https://pancakeswap.info/token/'.concat(getCakeAddress()),\n      },\n    ],\n  },\n  /* {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Collectibles'),\n    icon: 'NftIcon',\n    href: '/collectibles',\n  },\n  {\n    label: t('Team Battle'),\n    icon: 'TeamBattleIcon',\n    href: '/competition',\n  },\n  {\n    label: t('Teams & Profile'),\n    icon: 'GroupsIcon',\n    items: [\n      {\n        label: t('Leaderboard'),\n        href: '/teams',\n      },\n      {\n        label: t('Task Center'),\n        href: '/profile/tasks',\n      },\n      {\n        label: t('Your Profile'),\n        href: '/profile',\n      },\n    ],\n  },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Voting'),\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n      {\n        label: t('Merch'),\n        href: 'https://pancakeswap.creator-spring.com/',\n      },\n    ],\n  } */\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  /* console.log(cakePriceUsd) */\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber() * 1e9}\n      links={config(t)}\n/*       profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }} */\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  const showPrefix = Boolean(value && prefix)\n  const showUnit = Boolean(value && unit)\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} {...props}>\n      {showPrefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {showUnit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApr } from 'utils/apr'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\n\ninterface AprRowProps {\n  pool: Pool\n  isAutoVault?: boolean\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, isAutoVault = false, compoundFrequency = 1, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, totalStaked, isFinished, tokenPerBlock } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const earningTokenPrice = useBusdPriceFromToken(earningToken.symbol)\n  const earningTokenPriceAsNumber = earningTokenPrice && earningTokenPrice.toNumber()\n\n  const stakingTokenPrice = useBusdPriceFromToken(stakingToken.symbol)\n  const stakingTokenPriceAsNumber = stakingTokenPrice && stakingTokenPrice.toNumber()\n\n  const apr = getPoolApr(\n    stakingTokenPriceAsNumber,\n    earningTokenPriceAsNumber,\n    getBalanceNumber(totalStaked, stakingToken.decimals),\n    parseFloat(tokenPerBlock),\n  )\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPriceAsNumber / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  const earningsPercentageToDisplay = () => {\n    if (isAutoVault) {\n      const oneThousandDollarsWorthOfToken = 1000 / earningTokenPriceAsNumber\n      const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n        numberOfDays: 365,\n        farmApr: apr,\n        tokenPrice: earningTokenPriceAsNumber,\n        roundingDecimals,\n        compoundFrequency,\n        performanceFee,\n      })\n      return getRoi({\n        amountEarned: tokenEarnedPerThousand365D,\n        amountInvested: oneThousandDollarsWorthOfToken,\n      })\n    }\n    return apr\n  }\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPriceAsNumber}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={isHighValueToken ? 4 : 2}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay()}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)<{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n  isAutoVault?: boolean\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, startBlock, endBlock, isFinished, contractAddress, sousId } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance\n                color=\"primary\"\n                fontSize=\"14px\"\n                value={hasPoolStarted ? blocksRemaining : blocksUntilStart}\n                decimals={0}\n              />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  isAutoVault?: boolean\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} isAutoVault={isAutoVault} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string; isPromotedPool?: boolean }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme, isPromotedPool }) =>\n    isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  isPromotedPool?: boolean\n}> = ({\n  earningTokenSymbol,\n  stakingTokenSymbol,\n  isFinished = false,\n  isAutoVault = false,\n  isStaking = false,\n  isPromotedPool = false,\n}) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `cake-cakevault.svg`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isPromotedPool={isPromotedPool} isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useState, useCallback } from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      if (txHash) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningToken.symbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n    }\n  }, [onApprove, setRequestedApproval, toastSuccess, toastError, t, earningToken])\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>MAX</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakingTokenPrice = useBusdPriceFromToken(stakingToken.symbol)\n  const stakingTokenPriceAsNumber = stakingTokenPrice && stakingTokenPrice.gt(0) ? stakingTokenPrice.toNumber() : 0\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPriceAsNumber),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPriceAsNumber}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPriceAsNumber}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPriceAsNumber !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenPrice = useBusdPriceFromToken(earningToken.symbol)\n  const earningTokenPriceAsNumber = earningTokenPrice && earningTokenPrice.gt(0) ? earningTokenPrice.toNumber() : 0\n  const earningTokenDollarBalance = getBalanceNumber(\n    earnings.multipliedBy(earningTokenPriceAsNumber),\n    earningToken.decimals,\n  )\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPriceAsNumber !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useState } from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false, setLastUpdated }) => {\n  const { account } = useWeb3React()\n  const { stakingToken } = pool\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% vault!', { symbol: stakingToken.symbol }),\n        )\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\nconst UnstakingFeeCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          MAX\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { account } = useWeb3React()\n  const { stakingToken, userData } = pool\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction pool={pool} isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const shouldDisplayCakeProfit =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const currentSharesAsCake = convertSharesToCake(userShares, pricePerFullShare)\n  const cakeProfit = currentSharesAsCake.cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const cakeToDisplay = cakeProfit.gte(0) ? getBalanceNumber(cakeProfit, 18) : 0\n  const cakePriceBusd = usePriceCakeBusd()\n  const dollarValueOfCake = cakeProfit.times(cakePriceBusd)\n  const dollarValueToDisplay = dollarValueOfCake.gte(0) ? getBalanceNumber(dollarValueOfCake, 18) : 0\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{t('Recent CAKE profit:')}</Text>\n      {shouldDisplayCakeProfit && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={cakeToDisplay}\n          dollarValueToDisplay={dollarValueToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const timesCompoundedDaily = 288\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner isPromotedPool>\n        <StyledCardHeader\n          isPromotedPool\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"CAKE\"\n          stakingTokenSymbol=\"CAKE\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow\n            pool={pool}\n            isAutoVault\n            compoundFrequency={timesCompoundedDaily}\n            performanceFee={performanceFeeAsDecimal}\n          />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} isAutoVault />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Button,\n  HelpIcon,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  Link as UiKitLink,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(UiKitLink)`\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"32px\">\n      <Flex alignItems=\"center\" flexDirection={['column', null, 'row', null]}>\n        <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to={`${url}`}>\n            {t('Live')}\n          </ButtonMenuItem>\n          <NotificationDot show={hasStakeInFinishedPools}>\n            <ButtonMenuItem as={Link} to={`${url}/history`}>\n              {t('Finished')}\n            </ButtonMenuItem>\n          </NotificationDot>\n        </ButtonMenu>\n        <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n          <Text ml=\"8px\">{t('Staked only')}</Text>\n        </Flex>\n      </Flex>\n      <Flex ml=\"24px\" alignItems=\"center\" justifyContent=\"flex-end\">\n        <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n          <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n            <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n              {t('Help')}\n            </ButtonText>\n            <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n          </Button>\n        </StyledLink>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: callFee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(\n    <BountyModal\n      cakeBountyToDisplay={cakeBountyToDisplay}\n      dollarBountyToDisplay={dollarBountyToDisplay}\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\n      callFee={callFee}\n      TooltipComponent={TooltipComponent}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, 'pancake_pool_staked')\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () => finishedPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  // This pool is passed explicitly to the cake vault\n  const cakePoolData = useMemo(() => openPools.find((pool) => pool.sousId === 0), [openPools])\n\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  usePollFarmsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, 'row']}>\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolTabButtons\n          stakedOnly={stakedOnly}\n          setStakedOnly={setStakedOnly}\n          hasStakeInFinishedPools={hasStakeInFinishedPools}\n        />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            <>\n              <CakeVaultCard pool={cakePoolData} showStakedOnly={stakedOnly} />\n              {stakedOnly\n                ? orderBy(stakedOnlyOpenPools, ['sortOrder'])\n                    .slice(0, numberOfPoolsVisible)\n                    .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)\n                : orderBy(openPools, ['sortOrder'])\n                    .slice(0, numberOfPoolsVisible)\n                    .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)}\n            </>\n          </Route>\n          <Route path={`${path}/history`}>\n            {stakedOnly\n              ? orderBy(stakedOnlyFinishedPools, ['sortOrder'])\n                  .slice(0, numberOfPoolsVisible)\n                  .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)\n              : orderBy(finishedPools, ['sortOrder'])\n                  .slice(0, numberOfPoolsVisible)\n                  .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)}\n          </Route>\n        </FlexLayout>\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsWithToken = lazy(() => import('./views/PredictionsWithToken'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction_with_token\">\n              <PredictionsWithToken />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0xaabcac4b236d1a7290fb05234862348d274621cf',\n      56: '0xaabcac4b236d1a7290fb05234862348d274621cf',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x92f5CE5898E393158887ECbe7D46b60EdFC4D6E7',\n      56: '0x92f5CE5898E393158887ECbe7D46b60EdFC4D6E7',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: tokens.popen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: tokens.well,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: tokens.deri,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: tokens.chr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: tokens.cyc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: tokens.xend,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: tokens.hotcross,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: tokens.rfox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: tokens.wmass,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: tokens.ubxt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: tokens.btr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: tokens.τdoge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: tokens.pmon,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: tokens.fine,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: tokens.oin,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: tokens.hyfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: tokens.math,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: tokens.mcoin,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: tokens.win,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: tokens.trx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: tokens.btt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: tokens.pnt,\n    quoteToken: tokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: tokens.lmt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: tokens.dfd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: tokens.alpaca,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: tokens.beth,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: tokens.og,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: tokens.asr,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: tokens.atm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: tokens.juv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: tokens.psg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: tokens.xtz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: tokens.bch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: tokens.stax,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: tokens.nar,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: tokens.nya,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: tokens.burger,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n"],"sourceRoot":""}