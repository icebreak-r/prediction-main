{"version":3,"sources":["hooks/useGetLotteryHasDrawn.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Home/components/CakeWinnings.tsx","views/Home/components/LotteryJackpot.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/WinCard.tsx","views/Home/Home.tsx","hooks/useTokenBalance.ts","utils/lotteryUtils.ts","hooks/useTickets.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useBuyLottery.ts","hooks/useAllowance.ts"],"names":["useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","lotteryContract","useLottery","useEffect","a","getLotteryStatus","state","fetchLotteryStatus","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","useCallback","console","error","TicketsList","styled","div","props","theme","colors","primary","WarningModal","onDismiss","t","useTranslation","title","ModalActions","width","onClick","StyledSpacer","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","type","inputMode","min","placeholder","scale","num","toLocaleString","BuyTicketModal","amount","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getBalanceNumber","maxTickets","parseInt","getFullDisplayBalance","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","maxNumber","useMaxNumber","handleBuy","length","numbers","Array","apply","map","Math","floor","random","toString","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","toUpperCase","Tips","lotteryPrice","Announce","Final","variant","id","disabled","isInteger","Block","CakeWinnings","claimAmount","account","useWeb3React","cakeAmount","cakePriceBusd","usePriceCakeBusd","claimAmountBusd","BigNumber","multipliedBy","toNumber","CardValue","lineHeight","gt","CardBusdValue","decimals","color","style","LotteryJackpot","bold","fontSize","StyledLotteryCard","Card","CardImage","img","Label","textSubtle","Actions","LotteryCard","requestClaim","setRequestedClaim","allowance","useLotteryAllowance","useModal","PurchaseWarningModal","useTotalClaim","setLastUpdated","onMultiClaim","useMultiClaimLottery","cakeBalance","useTokenBalance","getCakeAddress","handleClaim","onPresentBuy","mb","src","alt","height","marginRight","UnlockButton","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","StyledFarmStakingCard","mediaQueries","lg","CardMidContent","Heading","attrs","WinCard","exact","activeClassName","to","justifyContent","mt","Hero","isDark","Cards","BaseLayout","sm","CTACards","Home","dispatch","useAppDispatch","textColor","useTheme","headerText","useMatchBreakpoints","isXl","fetchFarmsPublicDataAsync","nonArchivedFarms","nonArchivedFarm","pid","Page","as","slowRefresh","useRefresh","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","tokenAddress","BIG_ZERO","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","res","fetchBalance","useGetBnbBalance","useLastUpdated","lastUpdated","eth","getBalance","walletBalance","refresh","fastRefresh","multiCall","abi","calls","getWeb3NoAccount","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","i","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","send","from","on","tx","transactionHash","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","options","address","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","historyNumbers","winningNumbers","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","setWinningNumbers","useTickets","lotteryNumber","setTickets","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","children","l","React","Children","toArray","child","lotteryTicketContract","txHash","setMax","fetchMax","setAllowance","useCake","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch"],"mappings":"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","file":"static/js/7.7bb876af.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {t('Lottery ticket purchases are final.')}\n        <br />\n        {t('Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {t(\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {t('I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledSpacer />\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <Button scale=\"sm\" onClick={onSelectMax}>\n            {t('Max')}\n          </Button>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>\n        {t('%num% %symbol% Available', { num: max.toLocaleString(), symbol: availableSymbol })}\n      </StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport { useTranslation } from 'contexts/Localization'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={t('Ticket').toUpperCase()}\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{t('1 Ticket = %lotteryPrice% CAKE', { lotteryPrice: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {t('Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.')}\n        </Announce>\n        <Final>{t('You will spend: %num% CAKE', { num: cakeCosts(val) })}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { BigNumber } from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\ninterface CakeWinningsProps {\n  claimAmount: BigNumber\n}\n\nconst CakeWinnings: React.FC<CakeWinningsProps> = ({ claimAmount }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeAmount = getBalanceNumber(claimAmount)\n  const cakePriceBusd = usePriceCakeBusd()\n  const claimAmountBusd = new BigNumber(cakeAmount).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={cakeAmount} lineHeight=\"1.5\" />\n      {cakePriceBusd.gt(0) && <CardBusdValue value={claimAmountBusd} decimals={2} />}\n    </Block>\n  )\n}\n\nexport default CakeWinnings\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst LotteryJackpot = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text bold fontSize=\"24px\" style={{ lineHeight: '1.5' }}>\n        {t('Coming Soon')}\n      </Text>\n      <br />\n    </>\n  )\n}\n\nexport default LotteryJackpot\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useApproval } from 'hooks/useApproval'\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst LotteryCard = () => {\n  const { account } = useWeb3React()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requestClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const allowance = useLotteryAllowance()\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n        setLastUpdated()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, setLastUpdated])\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n          {t('Approve CAKE')}\n        </Button>\n      )\n    }\n    if (lotteryHasDrawn) {\n      return <Button disabled> {t('On sale soon')}</Button>\n    }\n    return (\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy}>\n        {t('Buy Tickets')}\n      </Button>\n    )\n  }\n\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Your Lottery Winnings')}\n        </Heading>\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{t('CAKE to Collect')}:</Label>\n          <CakeWinnings claimAmount={claimAmount} />\n        </Block>\n        <Block>\n          <Label>{t('Total jackpot this round')}:</Label>\n          <LotteryJackpot />\n        </Block>\n        {account ? (\n          <Actions>\n            <Button\n              id=\"dashboard-collect-winnings\"\n              disabled={getBalanceNumber(claimAmount) === 0 || requestClaim}\n              onClick={handleClaim}\n              style={{ marginRight: '8px' }}\n            >\n              {t('Collect Winnings')}\n            </Button>\n            {renderLotteryTicketButtonBuyOrApprove()}\n          </Actions>\n        ) : (\n          <Actions>\n            <UnlockButton width=\"100%\" />\n          </Actions>\n        )}\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default LotteryCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('ICEBRK Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{t('Total ICEBRK Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{t('Total ICEBRK Burned')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n{/*         <Row>\n          <Text fontSize=\"14px\">{t('New CAKE/block')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={20} />\n        </Row> */}\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst WinCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {t('Lottery')}\n          </Heading>\n          <CardMidContent color=\"#7645d9\">{t('Coming Soon')}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\" />\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default WinCard\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport useTheme from 'hooks/useTheme'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/egg/${ ({theme}) => theme.isDark ? \"LogoHeaderLight240x83.png\" : \"LogoHeaderDark240x83.png\" }');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/ICEBRK.png'), url('/images/blue-hex.png');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\nconst Home: React.FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { isDark } = useTheme()\n  const textColor = isDark ? \"primary\" : \"secondary\"\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n  const headerText = isMobile ? '' : t('ICEBRK-R')\n  // Fetch farm data once to get the max APR\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync(nonArchivedFarms.map((nonArchivedFarm) => nonArchivedFarm.pid)))\n  }, [dispatch])\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color={textColor}>\n          { headerText }\n        </Heading>\n        <Text>{t('Powered by the Binance Smart Chain.')}</Text>\n      </Hero>\n      <div>\n        <Cards>\n          {/* <FarmStakingCard /> */}\n          <LotteryCard />\n        </Cards>\n        <CTACards>\n          {/* <EarnAPRCard /> */}\n          {/* <EarnAssetCard /> */}\n          <WinCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          {/* <TotalValueLockedCard /> */}\n        </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply * 1e9))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call() * 1e9\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n"],"sourceRoot":""}